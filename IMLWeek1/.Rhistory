y11 = pred(m11,x)
Y11 = pred(m11,xx)
txt <- c("10. order model, MSE = ", MSE(y,y11))
plot(x,y,main=txt)
points(x,y11,col="red")
lines(xx,Y11,col="blue")
m1 = lm(y ~ x) #model
mc = m1$coefficients
y1 = pred(m1,x)
mse = MSE(y,y1)
txt <- c("Linear model, MSE = ", MSE(y,y1))
plot(x,y,main=txt)
points(x,y1,col="red")
#print("Linear model, MSE = " , MSE(y,y1))
m2 = lm(y ~ x + I(x^2)) #model
mc = m2$coefficients
y2 = pred(m2,x)
mse = c(mse,MSE(y,y2))
txt <- c("2. order model, MSE = ", MSE(y,y2))
plot(x,y,main=txt)
points(x,y2,col="red")
m2 = lm(y ~ x + I(x^2)) #model
mc = m2$coefficients
y2 = pred(m2,x)
mse = c(mse,MSE(y,y2))
txt <- c("2. order model, MSE = ", MSE(y,y2))
plot(x,y,main=txt)
points(x,y2,col="red")
mse
m1 = lm(y ~ x) #model
mc = m1$coefficients
y1 = pred(m1,x)
mse = MSE(y,y1)
txt <- c("Linear model, MSE = ", MSE(y,y1))
plot(x,y,main=txt)
points(x,y1,col="red")
#print("Linear model, MSE = " , MSE(y,y1))
m2 = lm(y ~ x + I(x^2)) #model
mc = m2$coefficients
y2 = pred(m2,x)
mse = c(mse,MSE(y,y2))
txt <- c("2. order model, MSE = ", MSE(y,y2))
plot(x,y,main=txt)
points(x,y2,col="red")
mse
m1 = lm(y ~ x) #model
mc = m1$coefficients
y1 = pred(m1,x)
mse = MSE(y,y1)
txt <- c("Linear model, MSE = ", MSE(y,y1))
plot(x,y,main=txt)
points(x,y1,col="red")
#print("Linear model, MSE = " , MSE(y,y1))
m1 = lm(y ~ x) #model
mc = m1$coefficients
y1 = pred(m1,x)
mse = MSE(y,y1)
txt <- c("Linear model, MSE = ", MSE(y,y1))
plot(x,y,main=txt)
points(x,y1,col="red")
#print("Linear model, MSE = " , MSE(y,y1))
m1 = lm(y ~ x) #model
mc = m1$coefficients
y1 = pred(m1,x)
mse = MSE(y,y1)
txt <- c("Linear model, MSE = ", MSE(y,y1))
plot(x,y,main=txt)
points(x,y1,col="red")
#print("Linear model, MSE = " , MSE(y,y1))
m2 = lm(y ~ x + I(x^2)) #model
mc = m2$coefficients
y2 = pred(m2,x)
mse = c(mse,MSE(y,y2))
txt <- c("2. order model, MSE = ", MSE(y,y2))
plot(x,y,main=txt)
points(x,y2,col="red")
m3 = lm(y ~ x + I(x^2) + I(x^3)) #model
mc = m3$coefficients
y3 = pred(m3,x)
mse = c(mse, MSE(y,y3))
txt <- c("3. order model, MSE = ", MSE(y,y3))
plot(x,y,main=txt)
points(x,y3,col="red")
m4 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4)) #model
mc = m4$coefficients
y4 = pred(m4,x)
mse = c(mse, MSE(y,y4))
txt <- c("4. order model, MSE = ", MSE(y,y4))
plot(x,y,main=txt)
points(x,y4,col="red")
m5 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5)) #model
mc = m5$coefficients
y5 = pred(m5,x)
mse = c(mse, MSE(y,y5))
txt <- c("5. order model, MSE = ", MSE(y,y5))
plot(x,y,main=txt)
points(x,y5,col="red")
m6 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6)) #model
mc = m5$coefficients
y6 = pred(m6,x)
mse = c(mse, MSE(y,y6))
txt <- c("6. order model, MSE = ", MSE(y,y6))
plot(x,y,main=txt)
points(x,y6,col="red")
m7 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7)) #model
y7 = pred(m7,x)
mse = c(mse, MSE(y,y7))
txt <- c("7. order model, MSE = ", MSE(y,y7))
plot(x,y,main=txt)
points(x,y7,col="red")
m8 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8)) #model
y8 = pred(m8,x)
mse = c(mse, MSE(y,y8))
txt <- c("8. order model, MSE = ", MSE(y,y8))
plot(x,y,main=txt)
points(x,y8,col="red")
m9 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8)) #model
y9 = pred(m9,x)
mse = c(mse, MSE(y,y9))
txt <- c("9. order model, MSE = ", MSE(y,y9))
plot(x,y,main=txt)
points(x,y9,col="red")
m10 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9)) #model
y10 = pred(m10,x)
mse = c(mse, MSE(y,y10))
txt <- c("10. order model, MSE = ", MSE(y,y10))
plot(x,y,main=txt)
points(x,y10,col="red")
m11 = lm(y ~ x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10)) #model
y11 = pred(m11,x)
Y11 = pred(m11,xx)
mse = c(mse, MSE(y,y11))
txt <- c("10. order model, MSE = ", MSE(y,y11))
plot(x,y,main=txt)
points(x,y11,col="red")
lines(xx,Y11,col="blue")
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(mse)
points(mse_test)
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(mse)
points(mse_test,col="red")
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(mse)
points(mse_test,col="red")
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(mse)
points(mse_test,col="red", xlab = "Degree of polynomial")
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(mse)
points(mse_test,col="red", xlab = "Degree of polynomial")
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(0:10, mse, xlab = "Degree of polynomial")
points(mse_test,col="red")
x_test = runif(1000,-3,3)
x_test = sort(x_test)
y_test = myPoly(x_test)
yt1 = pred(m1,x_test)
mse_test = MSE(y_test,yt1)
yt2 = pred(m2,x_test)
mse_test = c(mse_test,MSE(y_test,yt2))
yt3 = pred(m3,x_test)
mse_test = c(mse_test,MSE(y_test,yt3))
yt4 = pred(m4,x_test)
mse_test = c(mse_test,MSE(y_test,yt4))
yt5 = pred(m5,x_test)
mse_test = c(mse_test,MSE(y_test,yt5))
yt6 = pred(m6,x_test)
mse_test = c(mse_test,MSE(y_test,yt6))
yt7 = pred(m7,x_test)
mse_test = c(mse_test,MSE(y_test,yt7))
yt8 = pred(m8,x_test)
mse_test = c(mse_test,MSE(y_test,yt8))
yt9 = pred(m9,x_test)
mse_test = c(mse_test,MSE(y_test,yt9))
yt10 = pred(m10,x_test)
mse_test = c(mse_test,MSE(y_test,yt10))
yt11 = pred(m11,x_test)
mse_test = c(mse_test,MSE(y_test,yt11))
plot(0:10, mse, xlab = "Degree of polynomial", main = "Mean Squared Error, MSE")
points(mse_test,col="red")
buildModel <- function(dgr)
{
modStr = ""
txt = "x "
for (i in 2:dgr)
{
txt = paste(txt, "+I(x^", i, ")", sep="")
}
#x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10)
}
print(buildModel(3))
buildModel <- function(dgr)
{
modStr = ""
txt = "x "
for (i in 2:dgr)
{
txt = paste(txt, "+I(x^", i, ")", sep="")
}
return(txt)
#x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10)
}
buildModel(3)
buildModel <- function(dgr)
{
modStr = ""
txt = "x "
for (i in 2:dgr)
{
txt = paste(txt, "+ I(x^", i, ")", sep="")
}
return(txt)
#x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10)
}
buildModel(3)
buildModel <- function(dgr)
{
modStr = ""
txt = "x"
for (i in 2:dgr)
{
txt = paste(txt, " + I(x^", i, ")", sep="")
}
return(txt)
#x + I(x^2)+ I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10)
}
buildModel(3)
myModel <- function(x,y,degree)
{
modTxt = buildModel(degree)
modTxt = paste("lm(y~", modTxt, ")", sep="")
mod = eval(parse(modTxt))
return(mod)
}
(mod1 = myModel(x,y,2))
mod1 = myModel(x,y,2)
myModel(x,y,2)
myModel <- function(x,y,degree)
{
modTxt = buildModel(degree)
modTxt = paste("lm(y~", modTxt, ")", sep="")
#mod = eval(parse(modTxt))
#return(mod)
}
myModel(x,y,2)
print(myModel(x,y,2))
mf = eval(parse(myModel(x,y,2)))
myModel <- function(x,y,degree)
{
modTxt = buildModel(degree)
modTxt = paste("lm(y~", modTxt, ")", sep="")
mod = eval(parse(test = modTxt))
return(mod)
}
mf = myModel(x,y,2)
myModel <- function(x,y,degree)
{
modTxt = buildModel(degree)
modTxt = paste("lm(y~", modTxt, ")", sep="")
mod = eval(parse(text = modTxt))
return(mod)
}
mf = myModel(x,y,2)
mf
#cross validation mse
mse_cv = numeric(11) #one for each value of K
#cross validation mse
mse_cv = numeric(11) #one for each value of K
#cross validation mse
(mse_cv = numeric(11)) #one for each value of K
mse_cv
#cross validation mse
(mse_cv = numeric(11)) #one for each value of K
#generate the data
x = runif(30,-3,3)
errors = rnorm(30,0,0.4)
y = myPoly(x)+errors
(folds <- cut(seq(1,nrow(yourData)),breaks=10,labels=FALSE))
#generate the data
x = runif(30,-3,3)
errors = rnorm(30,0,0.4)
y = myPoly(x)+errors
(folds <- cut(seq(1,nrow(x)),breaks=10,labels=FALSE))
#generate the data
x = runif(30,-3,3)
errors = rnorm(30,0,0.4)
y = myPoly(x)+errors
(folds <- cut(seq(1,ncol(x)),breaks=10,labels=FALSE))
#generate the data
x = runif(30,-3,3)
errors = rnorm(30,0,0.4)
y = myPoly(x)+errors
(folds <- cut(seq(1,length(x)),breaks=10,labels=FALSE))
x[3]
folds <- cut(seq(1,length(x)),breaks=10,labels=FALSE)
x[folds == 3]
folds <- cut(seq(1,length(x)),breaks=10,labels=FALSE)
x[folds ~= 3]
folds <- cut(seq(1,length(x)),breaks=10,labels=FALSE)
x[folds != 3]
#generate the data
x = runif(30,-3,3)
errors = rnorm(30,0,0.4)
y = myPoly(x)+errors
folds <- cut(seq(1,length(x)),breaks=10,labels=FALSE)
#cross validation mse, create vector of zeros
(mse_cv = numeric(10)) #one for each value of K
for (K in 1:10)
{
#for each subset of data
for (set in 1:10)
{
#data used to model and cross validate
x_s_mod = x[folds != set]
y_s_mod = y[folds != set]
x_s_test = x[folds == set]
y_s_test = y[folds == set]
#build model
mod = myModel(x_s_mod, y_s_mod, K)
#predict with model
y_s_cv = pred(mod,x_s_test)
#calculate the MSE for the validation data and add to sum for this K
mse_cv[K] = mse_cv[K] + MSE(y_s_test,y_s_cv)
}
}
plot(1:10,mse_cv)
#generate the data
x = runif(30,-3,3)
errors = rnorm(30,0,0.4)
y = myPoly(x)+errors
folds <- cut(seq(1,length(x)),breaks=10,labels=FALSE)
#cross validation mse, create vector of zeros
(mse_cv = numeric(10)) #one for each value of K
for (K in 1:10)
{
#for each subset of data
for (set in 1:10)
{
#data used to model and cross validate
x_s_mod = x[folds != set]
y_s_mod = y[folds != set]
x_s_test = x[folds == set]
y_s_test = y[folds == set]
#build model
mod = myModel(x_s_mod, y_s_mod, K)
#predict with model
y_s_cv = pred(mod,x_s_test)
#calculate the MSE for the validation data and add to sum for this K
mse_cv[K] = mse_cv[K] + MSE(y_s_test,y_s_cv)
}
}
plot(1:10,mse_cv,xlab = "K", ylab = "Sum of mse", main = "MSE sum over 10-fold cross-validation")
d <- c(1,2,3)
(d <- c(1,2,3))
(d <- c(1,2,3))
d = c(d,d)
d <- c(1,2,3)
(d = c(d,d))
d <- c(1,2,3)
(d = c(t(d),t(d)))
d <- t(c(1,2,3))
(d = c(d,d))
d <- matrix(0,nrow = 100, ncol = 10000)
d[1,] = rbinom(10000,10,0.5)
d <- matrix(0,nrow = 100, ncol = 10000)
d[1,] = rbinom(10000,10,0.5)
d[1:2,1:10]
